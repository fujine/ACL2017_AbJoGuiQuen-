caseMur

====================================================
package model.plateau;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import model.plateau.objet.Objet;

class CaseMurTest {

	@BeforeEach
	void setUp() throws Exception {
	}

	@AfterEach
	void tearDown() throws Exception {
	}

	
	@Test
	void testCaseType() {
			
			
			CaseMur cm = new CaseMur();
			
			assertEquals(ECase.MUR, cm.getType());
		}
			
		@Test
		void testContructeurVideObjet() {
				
				
			CaseMur cm = new CaseMur();
				
			assertNull(cm.getObjet());
		
		}
		
		
	}


===============================================================
caseTest: 

package model.plateau;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import model.plateau.objet.Objet;
import model.plateau.objet.ObjetEscalier;

class ImitationObjet extends Objet{
  private boolean t = false;
	@Override
	public void appliquerEffet() {
		setT(true) ;
		// TODO Auto-generated method stub
		
	}
	
	
	
	public ECase getType () {
		return ECase.SOL;
	}



	public boolean isT() {
		return t;
	}



	public void setT(boolean t) {
		this.t = t;
	}
	
}






class CaseTest {

	@BeforeEach
	void setUp() throws Exception {
	}

	@AfterEach
	void tearDown() throws Exception {
	}
	
// test du COnstructeur 
	@Test
	void testContructeurSameObjet() {
		ImitationObjet io = new ImitationObjet();
		
		Case c = new Case(io);
		
		assertSame(io, c.getObjet());
	}
	
	@Test
	void testContructeurMemeType() {
		ImitationObjet io = new ImitationObjet();
		
		Case c = new Case(io);
		
		assertEquals(io.getType(), c.getType());
	}
	
	@Test
	void testContructeurVide() {
		
		
		Case c = new Case();
		
		assertEquals(ECase.SOL, c.getType());
	}
		
	@Test
	void testContructeurVideObjet() {
			
			
		Case c = new Case();
			
		assertNull(c.getObjet());
	
	}
	
	@Test
	void testAppliqerEffet() {
		ImitationObjet io = new ImitationObjet();
		
		Case c = new Case(io);
		c.appliquerEffet();
		
		assertTrue(io.isT());
	}
	

}

===================================================================

ObjetEscalierTest:

package model.plateau;

import static org.junit.jupiter.api.Assertions.*;

import java.awt.Point;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import model.plateau.objet.ObjetEscalier;

class ObjetEscalierTest {
	
	private Point coord;



	@BeforeEach
	void setUp() throws Exception {
		coord = new Point(5,5);
		
	}

	@AfterEach
	void tearDown() throws Exception {
	}

	
	
	@Test
	void testContructeurSameCoordonnee() {
		//setCoord(new Point(getX(),gety()));
		
		ObjetEscalier es = new ObjetEscalier(coord,10);
		//ImitationObjet io = new ImitationObjet();
		
		assertSame(coord, es.getCoord());
	}
	
	
	
	
	
	
	@Test
	void testContructeurSamePlateau() {
	
		ObjetEscalier es = new ObjetEscalier(coord,10);
		
		
		assertEquals(10, es.getPlateau());
	}
	
	
	
	
	
	
	@Test
	void testContructeurSameIndex() {
		//setCoord(new Point(getX(),gety()));
		
		ObjetEscalier es = new ObjetEscalier(coord,10);
		//ImitationObjet io = new ImitationObjet();
		
		assertEquals(10, es.getInfo());
	}
	
	
	
	
	
	
	
	
	
	
	
	
	@Test
	void testTypeEscalier() {
		
		
		ObjetEscalier es = new ObjetEscalier(coord,10);
		
		assertEquals(ECase.ESCALIER, es.getType());
	}
		
	
	
	@Test
	void testContructeurVideObjet() {
			
			
		Case c = new Case();
			
		assertNull(c.getObjet());
	
	}
	
	@Test
	void testAppliqerEffet() {
		ImitationObjet io = new ImitationObjet();
		
		Case c = new Case(io);
		c.appliquerEffet();
		
		assertTrue(io.isT());
	}
	
	
	
	
	

	public Point getCoord() {
		return coord;
	}

	public void setCoord(Point coord) {
		this.coord = coord;
	}

	

	
}
 ========================================================================
ObjetVieTest :

package model.plateau;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import model.Jeu;
import model.entites.Hero;
import model.plateau.objet.ObjetVie;

class ObjetVieTest {

	@BeforeEach
	void setUp() throws Exception {
	}

	@AfterEach
	void tearDown() throws Exception {
	}

	 
		public ECase getType () {
			return ECase.SOL;
		}


		
	// test du COnstructeur 
		@Test
		void testContructeurType() {
			ObjetVie ov = new ObjetVie();
		
			assertEquals(ECase.VIE, ov.getType());
		}
		
		@Test
		void testContructeurInfo() {
			ImitationObjet io = new ImitationObjet();
			
			ObjetVie ov = new ObjetVie();
			
			assertEquals(2, ov.getInfo());
		}
		
		
		
		@Test
		void testAppliqerEffet() {
			Jeu j = Jeu.getInstance();
			Hero h = j.getHero();
			h.setVie(6);
			ObjetVie ov = new ObjetVie();
			
			ov.setInfo(5);
			ov.appliquerEffet();
			
			assertEquals(1,ov.getInfo());
		}
		

		@Test
		void testAppliqerEffetHero() {
			Jeu j = Jeu.getInstance();
			Hero h = j.getHero();
			h.setVie(2);
			ObjetVie ov = new ObjetVie();
			
			ov.setInfo(3);
			ov.appliquerEffet();
			
			assertEquals(5,h.getVie());
		}
}
===========================================================